package rsb.protocol;

option java_outer_classname = "MetaDataPB";

message UserTime {
    // The key is a string consisting of ASCII characters that
    // determines the meaning of the timestamp.
    required bytes      key       = 1;

    // A timestamp in microseconds.
    required uint64     timestamp = 2;
}

message MetaData {
    // ID (a UUID) of the sending participant.
    required bytes      sender_id               = 1;

    // A time stamp that is automatically filled with the time the
    // event instance was created by the language binding. This should
    // usually reflect the time at which the notified condition most
    // likely occurred in the sender. If event instances are reused,
    // it has to be reset manually by the client.
    required int64      create_time             = 2;

    // The time at which the generated notification for an event was
    // sent on the bus (after serialization).
    required int64      send_time               = 3;

    // The time at which an event is received by listener in its
    // encoded form.
    optional int64      receive_time            = 4;

    // The time at which an event was decoded and will be dispatched
    // to the client as soon as possible (set directly before passing
    // it to the client handler).
    optional int64      deliver_time            = 5;

    // A set of key-value user-defined time-stamps.
    repeated UserTime   user_times              = 6;
}
